dist: trusty
sudo: required
services:
- docker

env:
- CHANGE_MINIKUBE_NONE_USER=true

before_install:
  - docker build -t kvenkata986/welcome images/helm-meetup/.

script:
- docker images kvenkata986/welcome 
- if [ "$TRAVIS_BRANCH" == "master" ]; then
  docker login  --username="$DOCKER_USER" --password="$DOCKER_PASS";
  docker push kvenkata986/welcome;
  fi

script:
# Download kubectl, which is a requirement for using minikube.
- curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.9.0/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
# Download minikube.
- curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.25.2/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
- sudo minikube start --vm-driver=none --kubernetes-version=v1.9.0
# Fix the kubectl context, as it's often stale.
- minikube update-context
# Wait for Kubernetes to be up and ready.
- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done

after_success:
- kubectl cluster-info
# Verify kube-addon-manager.
# Wait for kube-dns to be ready.
- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl -n kube-system get pods -lk8s-app=kube-dns -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1;echo "waiting for kube-dns to be available"; kubectl get pods --all-namespaces; done
- kubectl get nodes
- wget https://storage.googleapis.com/kubernetes-helm/helm-v2.10.0-linux-amd64.tar.gz 
- tar -xvzf helm-v2.10.0-linux-amd64.tar.gz
- sudo mv linux-amd64/helm /usr/local/bin/helm
- helm init
- kubectl delete deployment tiller-deploy --namespace=kube-system ; kubectl delete service tiller-deploy --namespace=kube-system ; rm -rf ~/.helm/
- kubectl create -f helm.yaml
- helm init --service-account helm
- sleep 25
- kubectl get po --namespace kube-system
- cd helm
- helm install . --name my-first-helm-chart
- helm list

